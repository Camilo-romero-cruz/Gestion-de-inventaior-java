
package com.mycompany.biblioteca.igu;

import Clases.CConexions;
import com.mycompany.biblioteca.logica.Controladora;
import com.mycompany.biblioteca.logica.Libro;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.List;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;

public class Consulta extends javax.swing.JFrame {

    Controladora control = new Controladora();

    public Consulta() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablalibros = new javax.swing.JTable();
        btnEliminar = new javax.swing.JToggleButton();
        BtnModificar = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        BtnActualizar = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jLabel1.setText("CONSUTA LIBROS");

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tablalibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablalibros);

        btnEliminar.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        BtnModificar.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        BtnModificar.setText("MODIFICAR");
        BtnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnModificarActionPerformed(evt);
            }
        });

        jToggleButton3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jToggleButton3.setText("SALIR");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });

        BtnActualizar.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        BtnActualizar.setText("ACTUALIZAR");
        BtnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 835, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                    .addComponent(BtnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BtnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BtnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(jLabel1)
                .addContainerGap(530, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        cargartabla();

    }//GEN-LAST:event_formWindowOpened

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        Inicio inicio = new Inicio();
        inicio.setVisible(true);
        inicio.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        // Obtener las filas seleccionadas de la JTable
        int[] filasSeleccionadas = tablalibros.getSelectedRows();

// Verificar si hay filas seleccionadas
        if (filasSeleccionadas.length > 0) {
            try {
                // Establecer la conexión a la base de datos
                CConexions objetoConexion = new CConexions();
                Connection connection = objetoConexion.estableceConexion();

                // Definir la instrucción SQL para eliminar registros
                String consultaEliminar = "DELETE FROM Libros WHERE id = ?";

                try (PreparedStatement preparedStatement = connection.prepareStatement(consultaEliminar)) {
                    // Iterar a través de las filas seleccionadas y eliminar los registros correspondientes
                    for (int filaSeleccionada : filasSeleccionadas) {
                        // Suponiendo que el ID del libro está en la primera columna (ajusta si es necesario)
                        int idLibro = (int) tablalibros.getValueAt(filaSeleccionada, 0);

                        // Establecer el parámetro ID en la instrucción SQL
                        preparedStatement.setInt(1, idLibro);

                        // Ejecutar la eliminación en la base de datos
                        preparedStatement.executeUpdate();
                    }

                    // Mostrar un mensaje de éxito o manejar según sea necesario
                    JOptionPane.showMessageDialog(null, "Libros eliminados con éxito", "Éxito", JOptionPane.INFORMATION_MESSAGE);

                    // Actualizar la visualización de la tabla (puede ser necesario actualizar el modelo de datos)
                    // Ejemplo: tuModeloDeTabla.setData(obtenerDatosDesdeLaBaseDeDatos());
                    // tuJTable.setModel(tuModeloDeTabla);
                } catch (Exception e) {
                    // Manejar cualquier excepción que ocurra durante la eliminación
                    JOptionPane.showMessageDialog(null, "Error al eliminar libros: " + e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
                } finally {
                    // Cerrar la conexión a la base de datos en cualquier caso (try-with-resources se encargará de cerrarlo si es necesario)
                    connection.close();
                }

            } catch (Exception e) {
                // Manejar cualquier excepción que ocurra al establecer la conexión a la base de datos
                JOptionPane.showMessageDialog(null, "Error al conectar a la base de datos: " + e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // No hay filas seleccionadas, mostrar un mensaje o tomar la acción apropiada
            JOptionPane.showMessageDialog(null, "Seleccione al menos un libro para eliminar", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void BtnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnActualizarActionPerformed

        cargartabla();

    }//GEN-LAST:event_BtnActualizarActionPerformed

    private void BtnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnModificarActionPerformed

        ActualizarLibro ActualizarLibro = new ActualizarLibro();
        ActualizarLibro.setVisible(true);
        ActualizarLibro.setLocationRelativeTo(null);
        this.dispose();

    }//GEN-LAST:event_BtnModificarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton BtnActualizar;
    private javax.swing.JToggleButton BtnModificar;
    private javax.swing.JToggleButton btnEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JTable tablalibros;
    // End of variables declaration//GEN-END:variables

    private void cargartabla() {
        // Aquí lo que hacemos es hacer la tabla no se pueda editar
        DefaultTableModel modeloTabla = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        // Se ponen los títulos
        String titulos[] = {"ID", "Titulo", "Autor", "Genero", "Editorial", "Numero de paginas", "Disponibilidad"};
        modeloTabla.setColumnIdentifiers(titulos);

        // Traer datos
        List<Libro> listaLibros = control.TraerLibros();

        // Llenar la tabla con datos
        for (Libro libro : listaLibros) {
            Object[] fila = {
                libro.getId(), // Ajusta según el método que obtenga el ID del libro
                libro.getTitulo(),
                libro.getAutor(),
                libro.getGenero(),
                libro.getEditorial(),
                libro.getNumPaginas(),
                libro.getCantidad()
            };

            modeloTabla.addRow(fila);
        }

        tablalibros.setModel(modeloTabla);
    }
}
